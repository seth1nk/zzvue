{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      isAuthenticated: false,\n      username: '',\n      role: ''\n    };\n  },\n  created() {\n    this.checkAuth();\n  },\n  methods: {\n    async checkAuth() {\n      try {\n        const response = await fetch('http://localhost:3000/auth/check', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.isAuthenticated = true;\n          this.username = data.username || 'Пользователь';\n          this.role = data.role || '';\n        } else {\n          console.error('Токен недействителен:', data.message);\n          this.isAuthenticated = false;\n          this.username = '';\n          this.role = '';\n        }\n      } catch (err) {\n        console.error('Ошибка проверки авторизации:', err);\n        this.isAuthenticated = false;\n        this.username = '';\n        this.role = '';\n      }\n    },\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:3000/auth/logout', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          this.isAuthenticated = false;\n          this.username = '';\n          this.role = '';\n          this.$router.push('/');\n        } else {\n          console.error('Сервер вернул ошибку при выходе');\n        }\n      } catch (err) {\n        console.error('Ошибка выхода:', err);\n        this.isAuthenticated = false;\n        this.username = '';\n        this.role = '';\n        this.$router.push('/');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","isAuthenticated","username","role","created","checkAuth","methods","response","fetch","method","credentials","json","ok","console","error","message","err","logout","$router","push"],"sources":["/home/vas/tiguncov/repairs/vue/src/App.vue"],"sourcesContent":["<template>\n  <header>\n    <div class=\"wrapper\">\n      <router-view></router-view>\n    </div>\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&display=swap\" rel=\"stylesheet\">\n  </header>\n  <main>\n    <TheWelcome />\n  </main>\n  <aside class=\"right-panel\">\n    <div class=\"logo-container\">\n      <router-link to=\"/\">\n        <img src=\"/images/logo.png\" alt=\"Logo\" class=\"logo\" />\n      </router-link>\n    </div>\n    <nav class=\"nav-buttons\">\n      <ul class=\"button-list\">\n        <li><router-link to=\"/\" class=\"button\">Главная</router-link></li>\n        <li><router-link to=\"/about\" class=\"button\">О нас</router-link></li>\n        <li><router-link to=\"/contact\" class=\"button\">Контакты</router-link></li>\n        <li v-if=\"isAuthenticated\"><router-link to=\"/repairs\" class=\"button\">Ремонты</router-link></li>\n        <li v-if=\"isAuthenticated\"><router-link to=\"/clients\" class=\"button\">Клиенты</router-link></li>\n        <li v-if=\"!isAuthenticated\"><router-link to=\"/login\" class=\"button\">Войти</router-link></li>\n        <li v-if=\"!isAuthenticated\"><router-link to=\"/register\" class=\"button\">Зарегистрироваться</router-link></li>\n        <li v-if=\"isAuthenticated\" class=\"welcome-message\"><span>Добро пожаловать, {{ username }}</span></li>\n        <li v-if=\"isAuthenticated\"><button @click=\"logout\" class=\"button\">Выйти</button></li>\n        <li v-if=\"isAuthenticated && role === 'admin'\"><a href=\"http://localhost:3000\" class=\"admin-button\">Админ-панель</a></li>\n      </ul>\n    </nav>\n  </aside>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isAuthenticated: false,\n      username: '',\n      role: ''\n    };\n  },\n  created() {\n    this.checkAuth();\n  },\n  methods: {\n    async checkAuth() {\n      try {\n        const response = await fetch('http://localhost:3000/auth/check', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        const data = await response.json();\n\n        if (response.ok) {\n          this.isAuthenticated = true;\n          this.username = data.username || 'Пользователь';\n          this.role = data.role || '';\n        } else {\n          console.error('Токен недействителен:', data.message);\n          this.isAuthenticated = false;\n          this.username = '';\n          this.role = '';\n        }\n      } catch (err) {\n        console.error('Ошибка проверки авторизации:', err);\n        this.isAuthenticated = false;\n        this.username = '';\n        this.role = '';\n      }\n    },\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:3000/auth/logout', {\n          method: 'GET',\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          this.isAuthenticated = false;\n          this.username = '';\n          this.role = '';\n          this.$router.push('/');\n        } else {\n          console.error('Сервер вернул ошибку при выходе');\n        }\n      } catch (err) {\n        console.error('Ошибка выхода:', err);\n        this.isAuthenticated = false;\n        this.username = '';\n        this.role = '';\n        this.$router.push('/');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Боковая панель */\n.right-panel {\n  position: fixed;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  background: linear-gradient(135deg, rgba(60, 47, 47, 0.95), rgba(74, 112, 67, 0.95)); /* Бордово-зеленый градиент */\n  backdrop-filter: blur(10px);\n  border-left: 1px solid rgba(255, 255, 255, 0.2); /* Полупрозрачная белая граница */\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  border-radius: 10px;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);\n}\n\n/* Логотип */\n.logo-container {\n  display: flex;\n  justify-content: center;\n}\n\n.logo {\n  max-width: 100px;\n  height: auto;\n  border-radius: 5px;\n  transition: transform 0.3s ease;\n}\n\n.logo:hover {\n  transform: scale(1.05);\n}\n\n/* Список кнопок */\n.button-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n/* Общие стили для кнопок навигации */\n.button {\n  display: block;\n  width: 180px;\n  padding: 10px 15px;\n  background: #722f37; /* Бордовый фон */\n  color: #f5f5f5; /* Светлый текст */\n  text-decoration: none;\n  border-radius: 8px;\n  font-weight: bold;\n  text-align: center;\n  transition: background 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);\n}\n\n.button:hover {\n  background: #355e3b; /* Зеленый при наведении */\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\n}\n\n/* Кнопка админ-панели */\n.admin-button {\n  display: block;\n  width: auto;\n  padding: 10px 15px;\n  background: linear-gradient(135deg, #722f37, #355e3b); /* Градиент бордовый-зеленый */\n  color: #f5f5f5;\n  text-decoration: none;\n  border-radius: 8px;\n  font-weight: bold;\n  text-transform: uppercase;\n  text-align: center;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);\n  transition: background 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.admin-button:hover {\n  background: linear-gradient(135deg, #355e3b, #722f37); /* Обратный градиент при наведении */\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\n}\n\n/* Приветственное сообщение */\n.welcome-message span {\n  display: block;\n  width: auto;\n  padding: 10px 15px;\n  font-size: 16px;\n  color: #f5f5f5; /* Светлый текст */\n  font-weight: bold;\n  text-align: center;\n  background: rgba(60, 47, 47, 0.5); /* Полупрозрачный бордовый фон */\n  border-radius: 8px;\n}\n\n/* Адаптивность */\n@media (max-width: 768px) {\n  .right-panel {\n    padding: 15px;\n    width: 160px;\n  }\n\n  .logo {\n    max-width: 80px;\n  }\n\n  .button {\n    width: 140px;\n    padding: 8px 10px;\n    font-size: 0.9rem;\n  }\n\n  .admin-button,\n  .welcome-message span {\n    padding: 8px 10px;\n    font-size: 0.9rem;\n  }\n}\n</style>"],"mappings":";AAkCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,MAAMV,IAAG,GAAI,MAAMO,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,IAAI,CAACX,eAAc,GAAI,IAAI;UAC3B,IAAI,CAACC,QAAO,GAAIF,IAAI,CAACE,QAAO,IAAK,cAAc;UAC/C,IAAI,CAACC,IAAG,GAAIH,IAAI,CAACG,IAAG,IAAK,EAAE;QAC7B,OAAO;UACLU,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEd,IAAI,CAACe,OAAO,CAAC;UACpD,IAAI,CAACd,eAAc,GAAI,KAAK;UAC5B,IAAI,CAACC,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,IAAG,GAAI,EAAE;QAChB;MACF,EAAE,OAAOa,GAAG,EAAE;QACZH,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEE,GAAG,CAAC;QAClD,IAAI,CAACf,eAAc,GAAI,KAAK;QAC5B,IAAI,CAACC,QAAO,GAAI,EAAE;QAClB,IAAI,CAACC,IAAG,GAAI,EAAE;MAChB;IACF,CAAC;IACD,MAAMc,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACK,EAAE,EAAE;UACf,IAAI,CAACX,eAAc,GAAI,KAAK;UAC5B,IAAI,CAACC,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,IAAG,GAAI,EAAE;UACd,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACLN,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;QAClD;MACF,EAAE,OAAOE,GAAG,EAAE;QACZH,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEE,GAAG,CAAC;QACpC,IAAI,CAACf,eAAc,GAAI,KAAK;QAC5B,IAAI,CAACC,QAAO,GAAI,EAAE;QAClB,IAAI,CAACC,IAAG,GAAI,EAAE;QACd,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}